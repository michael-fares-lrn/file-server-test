(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.init=e,this.events=e.events,this.lrnUtils=n,this.el=e.$el.get(0),this.render(),this.registerPublicMethods(),this.handleEvents(),e.events.trigger("ready")}var n,s;return n=t,(s=[{key:"render",value:function(){this.el.innerHTML='\n            <div class="'.concat("lrn-custom-question",' lrn-response-validation-wrapper">\n                <div class="lrn_response_input">\n                    <input style="width:100%; margin-bottom: 10px;"/>\n                    <button data-component="custom:event">Dispatch <code>custom:event</code> which will be captured by hostpage</button>\n                    <button data-component="custom:method">Dispatch custom public method <code>alertMessage("Hello")</code></button>\n                </div>            \n            </div>\n        ')}},{key:"registerPublicMethods",value:function(){var e=this.init,t=e.events,n=e.getFacade();n.alertMessage=function(e){alert(e),n.customEvents.trigger("alertMessage:dispatched",{message:e})},n.customEvents={once:t.once,on:t.on,off:t.off,trigger:t.trigger}}},{key:"handleEvents",value:function(){var e=this.init,t=this.el,n=e.getFacade();t.querySelector('button[data-component="custom:event"]').addEventListener("click",(function(){n.customEvents.trigger("custom:event",{message:"Custom event dispatched"}),t.querySelector("input").value='"custom:event" event has been triggered by custom question and subscribed by the main hostpage. Check the console for event details and assessment.php for the implementation.'})),t.querySelector('button[data-component="custom:method"]').addEventListener("click",(function(){n.alertMessage("Hello")})),n.customEvents.on("alertMessage:dispatched",(function(e){console.log('Listen to custom event "alertMessage:dispatched":',e),t.querySelector("input").value='Custom "alertMessage:dispatched" dispatched with message: '.concat(e.message," and subscribed by the current custom question instance")}))}}])&&e(n.prototype,s),t}();LearnosityAmd.define([],(function(){return{Question:t}}))})();