(()=>{"use strict";var t="lrn-custom-question";function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function r(t,e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),this.init=t,this.events=t.events,this.lrnUtils=e,this.el=t.$el.get(0),this.render().then((function(){n.registerPublicMethods(),n.handleEvents(),t.events.trigger("ready")}))}var i,o;return i=r,(o=[{key:"render",value:function(){var n=this.el,r=this.init.question;return n.innerHTML='\n            <div class="'.concat(t,' lrn-response-validation-wrapper">\n                <div class="lrn_response_input">\n                    <button id="my-button">').concat(r.text,'</button>\n                </div>            \n                <div class="').concat(t,'-checkAnswer-wrapper"></div>\n                <div class="').concat(t,'-suggestedAnswers-wrapper"></div>\n            </div>\n        '),Promise.all([]).then((function(t){var n;(function(t){if(Array.isArray(t))return t})(n=t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}))}},{key:"registerPublicMethods",value:function(){var t=this.init.getFacade();t.disable=function(){},t.enable=function(){}}},{key:"handleEvents",value:function(){var t=this.events,e=this.init,n=this.el,r=(e.getFacade(),n.querySelector("#my-button"));r.addEventListener("click",(function(){r.innerText="Okay, you've interacted with me. Thank you!",r.setAttribute("disabled",!0),t.trigger("my-custom-event")})),t.on("my-custom-event",(function(){console.log("my-custom-event FIRED")}))}}])&&n(i.prototype,o),r}();LearnosityAmd.define([],(function(){return{Question:r}}))})();